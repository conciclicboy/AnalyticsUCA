as.Date(b$Date,"%d/%m/%Y")
b<-read.csv("./data/autos_ventas.csv",sep = ";")
knitr::kable({
#df <- t(head(round(a,2), 5))
df <- t(head(b, 5))
colnames(df) <- sprintf("%02d", 1:ncol(df))
df
})
#Transformando en fecha
b$Date<- as.Date(b$Date,"%d/%m/%Y")
b
# Renombrando columna Date
colnames(b)[1]
# Renombrando columna Date
colnames(b)[1]<-"Date"
# Transformando en fecha
b$Date<- as.Date(b$Date,"%d/%m/%Y")
install.packages("Metrics")
pl+ geom_line(aes(y=Car),size=0.5,color="blue")+geom_line(aes(y=Truck),size=0.5,color="darkred")+theme_minimal()
# Renombrando columna Date
colnames(b)[1]<-"Date"
# Transformando en fecha
b$Date<- as.Date(b$Date,"%d/%m/%Y")
#Graficando
pl <- ggplot(b,aes(x=Date))
library(ggplot2)
#Graficando
pl <- ggplot(b,aes(x=Date))
pl+ geom_line(aes(y=Car),size=0.5,color="blue")+geom_line(aes(y=Truck),size=0.5,color="darkred")+theme_minimal()
pl+ geom_line(aes(y=Car),size=0.7,color="blue")+geom_line(aes(y=Truck),size=0.7,color="darkred")+theme_minimal()
pl+ geom_line(aes(y=Car),size=0.7)+geom_line(aes(y=Truck),size=0.7)+theme_minimal()+scale_color_brewer(palette="Paired")
pl+ geom_line(aes(y=Car),size=0.7,color="blue")+geom_line(aes(y=Truck),size=0.7,color="darkred")#+theme_minimal()+scale_color_brewer(palette="Paired")
pl+ geom_line(aes(y=Car),size=0.7,color="blue")+geom_line(aes(y=Truck),size=0.7,color="darkred")+theme_minimal()#+scale_color_brewer(palette="Paired")
pl+ geom_line(aes(y=Car),color="blue")+geom_line(aes(y=Truck),color="darkred")+theme_minimal()#+scale_color_brewer(palette="Paired")
pl+ geom_line(aes(y=Car),color="blue")+geom_line(aes(y=Truck),color="darkred")+theme_minimal()#+scale_color_brewer(palette="Paired")
![Validacion_forward](forward_chain.png)
![Validacion en serie de tiempo](forward_chain.png)
knitr::opts_chunk$set(echo = TRUE)
b<-read.csv("./data/autos_ventas.csv",sep = ";")
knitr::kable({
#df <- t(head(round(a,2), 5))
df <- t(head(b, 5))
colnames(df) <- sprintf("%02d", 1:ncol(df))
df
})
library(ggplot2)
# Renombrando columna Date
colnames(b)[1]<-"Date"
# Transformando en fecha
b$Date<- as.Date(b$Date,"%d/%m/%Y")
#Graficando
pl <- ggplot(b,aes(x=Date))
pl+ geom_line(aes(y=Car),color="blue")+geom_line(aes(y=Truck),color="darkred")+theme_minimal()+theme(axis.text.x=element_text(angle=90, hjust=1))#+scale_color_brewer(palette="Paired")
#Graficando Carros
pl<-ggplot(b,aes(x=Car))
pl+geom_histogram(bins=20,fill='blue',alpha=0.4,color="blue")+theme_minimal()
#Graficando Camiones
pl<-ggplot(b,aes(x=Truck))
pl+geom_histogram(bins=20,fill='blue',alpha=0.4,color="blue")+theme_minimal()
# Haremos esto en porciones porque el programa va tronar si hacemos todos los
library(radiant.data)
visualize(dataset=b,
xvar=c("Inventories", "CPI_New_Cars", "CPI_Used_Cars",
"Gas_Prices", "Cons_Conf_Autos", "Miles_Driven"),
yvar="Car",
type="scatter",
custom=FALSE
)
visualize(dataset=b,
xvar=c("Bank_Auto_Interest_Rate", "US_Population_millions", "Unemployment",
"Disposible_Income_Capita_Real", "Saving_Capital", "Household_Debt_Capital"),
yvar="Car",
type="scatter",
custom=FALSE
)
visualize(dataset=b,
xvar=c("US_House_Price_Inflation", "Consumer_Confidence", "RealGDP",
"Fed_Funds_Rate", "US_Urban_CPI_Change", "Nonfarm_Payrolls"),
yvar="Car",
type="scatter",
custom=FALSE
)
# Haremos esto en porciones porque el programa va tronar si hacemos todos los
library(radiant.data)
visualize(dataset=b,
xvar=c("Inventories", "CPI_New_Cars", "CPI_Used_Cars",
"Gas_Prices", "Cons_Conf_Autos", "Miles_Driven"),
yvar="Truck",
type="scatter",
custom=FALSE
)
visualize(dataset=b,
xvar=c("Inventories", "CPI_New_Cars", "CPI_Used_Cars",
"Gas_Prices", "Cons_Conf_Autos", "Miles_Driven"),
yvar="Truck",
type="scatter",
custom=FALSE
)
visualize(dataset=b,
xvar=c("US_House_Price_Inflation", "Consumer_Confidence", "RealGDP",
"Fed_Funds_Rate", "US_Urban_CPI_Change", "Nonfarm_Payrolls"),
yvar="Truck",
type="scatter",
custom=FALSE
)
View(b)
datos<-read.csv("./data/autos_ventas.csv",sep = ";")
knitr::kable({
#df <- t(head(round(a,2), 5))
df <- t(head(datos, 5))
colnames(df) <- sprintf("%02d", 1:ncol(df))
df
})
datos<-read.csv("./data/autos_ventas.csv",sep = ";")
knitr::kable({
#df <- t(head(round(a,2), 5))
df <- t(head(datos, 5))
colnames(df) <- sprintf("%02d", 1:ncol(df))
df
})
b<-read.csv("./data/autos_ventas.csv",sep = ";")
knitr::kable({
#df <- t(head(round(a,2), 5))
df <- t(head(b, 5))
colnames(df) <- sprintf("%02d", 1:ncol(df))
df
})
# Renombrando columna Date
colnames(b)[1]<-"Date"
# Transformando en fecha
b$Date<- as.Date(b$Date,"%d/%m/%Y")
#Graficando
pl <- ggplot(b,aes(x=Date))
pl+ geom_line(aes(y=Car),color="blue")+geom_line(aes(y=Truck),color="darkred")+theme_minimal()+theme(axis.text.x=element_text(angle=90, hjust=1))#+scale_color_brewer(palette="Paired")
#Graficando Carros
pl<-ggplot(b,aes(x=Car))
pl+geom_histogram(bins=20,fill='blue',alpha=0.4,color="blue")+theme_minimal()
#Graficando Camiones
pl<-ggplot(b,aes(x=Truck))
View(b)
train_set<-b[year(b$Date)<2017]
train_set<-b[,year(b$Date)<2017]
train_set<-b[year(b$Date)<2017,]
View(train_set)
test_set<-b[year(b$Date)>=2017,]
View(test_set)
train_set<-b[year(b$Date)<2017,2:ncol(b)]
test_set<-b[year(b$Date)>=2017,2:ncol(b)]
train_set<-b[year(b$Date)<2017,1:ncol(b)]
test_set<-b[year(b$Date)>=2017,1:ncol(b)]
View(b)
# Librería de regresiones
library(olsrr)
model_1<- lm(b$Car ~ b$Q1+ b$Q2+ b$Q3+
b$CPI_Used_Cars+ b$Gas_Prices+ b$Miles_Driven+
b$US_Population_millions+ b$Unemployment+
b$Disposible_Income_Capita_Real+ b$Saving_Capital+
b$Household_Debt_Capital+ b$RealGDP+ b$Fed_Funds_Rate+
b$US_Urban_CPI_Change+ b$Nonfarm_Payrolls,
data=b)
summary(model_1)
model_1<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$CPI_Used_Cars+ b$Gas_Prices+ b$Miles_Driven+
b$US_Population_millions+ b$Unemployment+
b$Disposible_Income_Capita_Real+ b$Saving_Capital+
b$Household_Debt_Capital+ b$RealGDP+ b$Fed_Funds_Rate+
b$US_Urban_CPI_Change+ b$Nonfarm_Payrolls,
data=b)
summary(model_1)
coefficients(model_1)
# Imprimiendo resultado
knitr::kable(xtable(summary(model_1)))
# Imprimiendo resultado
knitr::kable(xtable(summary(model_1)))
library(xtable)
# Modelo
model_1<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$CPI_Used_Cars+ b$Gas_Prices+ b$Miles_Driven+
b$US_Population_millions+ b$Unemployment+
b$Disposible_Income_Capita_Real+ b$Saving_Capital+
b$Household_Debt_Capital+ b$RealGDP+ b$Fed_Funds_Rate+
b$US_Urban_CPI_Change+ b$Nonfarm_Payrolls,
data=b)
# Imprimiendo resultado
knitr::kable(xtable(summary(model_1)))
# Modelo
model_1<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$CPI_Used_Cars+ b$Gas_Prices+ b$Miles_Driven+
b$US_Population_millions+ b$Unemployment+
b$Disposible_Income_Capita_Real+ b$Saving_Capital+
b$Household_Debt_Capital+ b$RealGDP+ b$Fed_Funds_Rate+
b$US_Urban_CPI_Change+ b$Nonfarm_Payrolls,
data=b)
# stepwise backward regression
ols_step_backward_p(model_1)
ols_step_forward_p(model_1)
summary(model_1)
xx<-ols_step_forward_p(model_1)
xx<- ols_step_backward_aic(model_1)
xx<- ols_step_forward_aic(model_1)
summary(xx)
ols_step_best_subset(model_1)
ols_step_both_aic(model_1)
ols_step_both_p(model_1)
# stepwise backward regression
ols_step_backward_p(model_1)
ols_step_forward_p(model_1)
# stepwise backward regression
ols_step_backward_p(model_1)
# Modelo
model_1<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$Inventories+b$CPI_Used_Cars+ b$US_Population_millions+
b$Unemployment+ b$Disposible_Income_Capita_Real+
b$Household_Debt_Capital+ b$Consumer_Confidence+
b$RealGDP+ b$Fed_Funds_Rate+ b$Nonfarm_Payrolls,
data=b)
# stepwise backward regression
ols_step_backward_p(model_1)
# Modelo
model_1<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$CPI_Used_Cars+ b$Gas_Prices+ b$Miles_Driven+
b$US_Population_millions+ b$Unemployment+
b$Disposible_Income_Capita_Real+ b$Saving_Capital+
b$Household_Debt_Capital+ b$RealGDP+ b$Fed_Funds_Rate+
b$US_Urban_CPI_Change+ b$Nonfarm_Payrolls,
data=b)
summary(model_1)
ols_step_best_subset(model_1)
ols_step_forward_p(model_1)
# stepwise backward regression
ols_step_backward_p(model_1)
# stepwise backward regression
ols_step_backward_aic(model_1)
ols_step_forward_aic(model_1)
ols_step_backward_aic(model_1)
ols_step_backward_p(model_1)
ols_step_forward_p(model_1)
ols_step_backward_aic(model_1)
# Creando modelo
#model_1<- lm(formula = price ~ room_type + neighborhood +
#             reviews +overall_satisfaction + accommodates +
#             bedrooms,data = train_set)
# Sacando predicciones
#pred_train_1=predict(model_1,train_set)#entrenamiento
#pred_test_1=predict(model_1,test_set)#evaluación
# Reportando modelo: usted solo necesita poner "summary(model)"
# Eso le entrega los resultados del modelo pero se imprime en formato feo
# Nosotros lo vamos a imprimir como una "xtable" en "knitr::kable"
#library(xtable)
#knitr::kable(xtable(summary(model_1)))
# Librería de regresiones
library(olsrr)
library(xtable)
# Modelo
model_1<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$CPI_Used_Cars+ b$Gas_Prices+ b$Miles_Driven+
b$US_Population_millions+ b$Unemployment+
b$Disposible_Income_Capita_Real+ b$Saving_Capital+
b$Household_Debt_Capital+ b$RealGDP+ b$Fed_Funds_Rate+
b$US_Urban_CPI_Change+ b$Nonfarm_Payrolls,
data=b)
# stepwise backward regression
ols_step_backward_aic(model_1)
#ols_step_forward_p(model_1)
#ols_step_both_aic()
# Imprimiendo resultado
#knitr::kable(xtable(summary(model_1)))
# Creando modelo
#model_1<- lm(formula = price ~ room_type + neighborhood +
#             reviews +overall_satisfaction + accommodates +
#             bedrooms,data = train_set)
# Sacando predicciones
#pred_train_1=predict(model_1,train_set)#entrenamiento
#pred_test_1=predict(model_1,test_set)#evaluación
# Reportando modelo: usted solo necesita poner "summary(model)"
# Eso le entrega los resultados del modelo pero se imprime en formato feo
# Nosotros lo vamos a imprimir como una "xtable" en "knitr::kable"
#library(xtable)
#knitr::kable(xtable(summary(model_1)))
# Librería de regresiones
library(olsrr)
library(xtable)
# Modelo
model_1<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$CPI_Used_Cars+ b$Gas_Prices+ b$Miles_Driven+
b$US_Population_millions+ b$Unemployment+
b$Disposible_Income_Capita_Real+ b$Saving_Capital+
b$Household_Debt_Capital+ b$RealGDP+ b$Fed_Funds_Rate+
b$US_Urban_CPI_Change+ b$Nonfarm_Payrolls,
data=b)
# Imprimiendo resultado
knitr::kable(xtable(summary(model_1)))
# Creando modelo
#model_1<- lm(formula = price ~ room_type + neighborhood +
#             reviews +overall_satisfaction + accommodates +
#             bedrooms,data = train_set)
# Sacando predicciones
#pred_train_1=predict(model_1,train_set)#entrenamiento
#pred_test_1=predict(model_1,test_set)#evaluación
# Reportando modelo: usted solo necesita poner "summary(model)"
# Eso le entrega los resultados del modelo pero se imprime en formato feo
# Nosotros lo vamos a imprimir como una "xtable" en "knitr::kable"
#library(xtable)
#knitr::kable(xtable(summary(model_1)))
# Librería de regresiones
library(olsrr)
library(xtable)
# Modelo
model_1<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$CPI_Used_Cars+ b$Gas_Prices+ b$Miles_Driven+
b$US_Population_millions+ b$Unemployment+
b$Disposible_Income_Capita_Real+ b$Saving_Capital+
b$Household_Debt_Capital+ b$RealGDP+ b$Fed_Funds_Rate+
b$US_Urban_CPI_Change+ b$Nonfarm_Payrolls,
data=b)
# Imprimiendo resultado
knitr::kable(xtable(summary(model_1)))
# stepwise backward regression
temporal<-ols_step_backward_aic(model_1)
model_2<-temporal$model
summary(model_2)
# Sacando predicciones
pred_train_2=exp(predict(model_2,train_set))
pred_test_2=exp(predict(model_2,test_set))
# Modelo
model_1<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$CPI_Used_Cars+ b$Gas_Prices+ b$Miles_Driven+
b$US_Population_millions+ b$Unemployment+
b$Disposible_Income_Capita_Real+ b$Saving_Capital+
b$Household_Debt_Capital+ b$RealGDP+ b$Fed_Funds_Rate+
b$US_Urban_CPI_Change+ b$Nonfarm_Payrolls,
data=b)
# Sacando predicciones
pred_train_2=exp(predict(model_2,train_set))
pred_test_2=exp(predict(model_2,test_set))
# Sacando predicciones
pred_train_1=exp(predict(model_1,train_set))
# Sacando predicciones
pred_train_1=exp(predict(model_1,train_set))
pred_test_1=exp(predict(model_1,test_set))
#Mean Absolute Error
mae_train1<-mae(test_set$price,pred_train_1)
mae1<-mae(test_set$price,pred_test_1)
library(Metrics)
#Mean Absolute Error
mae_train1<-mae(test_set$price,pred_train_1)
mae1<-mae(test_set$price,pred_test_1)
# Creando modelo: stepwise backward regression
temporal<-ols_step_backward_aic(model_1)
model_2<-temporal$model
# Sacando predicciones
pred_train_2=exp(predict(model_2,train_set))
pred_test_2=exp(predict(model_2,test_set))
#Mean Absolute Error
mae_train2<-mae(test_set$price,pred_train_2)
mae2<-mae(test_set$price,pred_test_2)
# Imprimiendo resultado
knitr::kable(xtable(summary(model_2)))
mae_train1
mae_train2
mae1
mae2
# Sacando predicciones
pred_train_1=exp(predict(model_1,train_set))
pred_test_1=exp(predict(model_1,test_set))
# Modelo
model_1<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$CPI_Used_Cars+ b$Gas_Prices+ b$Miles_Driven+
b$US_Population_millions+ b$Unemployment+
b$Disposible_Income_Capita_Real+ b$Saving_Capital+
b$Household_Debt_Capital+ b$RealGDP+ b$Fed_Funds_Rate+
b$US_Urban_CPI_Change+ b$Nonfarm_Payrolls,
data=b)
# Sacando predicciones
pred_train_1=exp(predict(model_1,train_set))
pred_test_1=exp(predict(model_1,test_set))
View(train_set)
model_1
# Sacando predicciones
pred_train_1=predict(model_1,train_set)
pred_test_1=predict(model_1,test_set)
#Mean Absolute Error
mae_train1<-mae(test_set$price,pred_train_1)
mae1<-mae(test_set$price,pred_test_1)
mae1
pred_train_1
#Mean Absolute Error
mae1<-mae(test_set$price,pred_test_1)
mae_train1<-mae(train_set$price,pred_train_1)
mae1
test_set$price
View(test_set)
# Sacando predicciones
pred_train_1=predict(model_1,train_set)
pred_test_1=predict(model_1,test_set)
#Mean Absolute Error
mae1<-mae(test_set$Car,pred_test_1)
mae_train1<-mae(train_set$Car,pred_train_1)
mae1
# Creando modelo: stepwise backward regression
temporal<-ols_step_backward_aic(model_1)
# Creando modelo: stepwise backward regression
temporal<-ols_step_backward_aic(model_1)
model_2<-temporal$model
# Sacando predicciones
pred_train_2=predict(model_2,train_set)
pred_test_2=predict(model_2,test_set)
#Mean Absolute Error
mae_train2<-mae(test_set$Car,pred_train_2)
mae2<-mae(test_set$Car,pred_test_2)
mae1
mae2
mae_train1
mae_train2
#Mean Absolute Error
mae_train2<-mae(train_set$Car,pred_train_2)
mae2<-mae(test_set$Car,pred_test_2)
mae_train1
mae_train2
mae1
mae()
mae_train1
mae_train2
mae1
mae2
# Modelo
model_3<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$Inventories+b$CPI_Used_Cars+ b$US_Population_millions+
b$Unemployment+ b$Disposible_Income_Capita_Real+
b$Household_Debt_Capital+ b$Consumer_Confidence+
b$RealGDP+ b$Fed_Funds_Rate+ b$Nonfarm_Payrolls,
data=b)
# Sacando predicciones
pred_train_3=predict(model_3,train_set)
pred_test_3=predict(model_3,test_set)
#Mean Absolute Error
mae3<-mae(test_set$Car,pred_test_3)
mae_train3<-mae(train_set$Car,pred_train_3)
# Imprimiendo resultado
knitr::kable(xtable(summary(model_3)))
mae3
mae1
mae2
mae3
mae_train1
mae_train2
mae_train3
# Modelo
model_3<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$Inventories+b$CPI_Used_Cars+ b$US_Population_millions+
b$Unemployment+ b$Disposible_Income_Capita_Real+
b$Household_Debt_Capital+ b$Consumer_Confidence+
b$RealGDP+ b$Fed_Funds_Rate+ b$Nonfarm_Payrolls,
data=b)
# Eliminando variables
temporal<-ols_step_backward_aic(model_3)
# Eliminando variables
temporal<-ols_step_backward_aic(model_3)
model_3<-temporal$model
# Sacando predicciones
pred_train_3=predict(model_3,train_set)
pred_test_3=predict(model_3,test_set)
#Mean Absolute Error
mae3<-mae(test_set$Car,pred_test_3)
mae_train3<-mae(train_set$Car,pred_train_3)
mae_train1
mae_train2
mae_train3
mae1
mae2
mae3
# Modelo
model_3<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$Inventories+b$CPI_Used_Cars+ b$US_Population_millions+
b$Unemployment+ b$Disposible_Income_Capita_Real+
b$Household_Debt_Capital+ b$Consumer_Confidence+
b$RealGDP+ b$Fed_Funds_Rate+ b$Nonfarm_Payrolls,
data=b)
# Eliminando variables
temporal<-ols_step_backward_aic(model_3)
model_3<-temporal$model
# Sacando predicciones
pred_train_3=predict(model_3,train_set)
pred_test_3=predict(model_3,test_set)
#Mean Absolute Error
mae3<-mae(test_set$Car,pred_test_3)
mae_train3<-mae(train_set$Car,pred_train_3)
# Imprimiendo resultado
knitr::kable(xtable(summary(model_3)))
# Modelo
model_3<- lm(b$Car ~ b$Time + b$Year+ b$Q1+ b$Q2+ b$Q3+
b$Inventories+b$CPI_Used_Cars+ b$US_Population_millions+
b$Unemployment+ b$Disposible_Income_Capita_Real+
b$Household_Debt_Capital+ b$Consumer_Confidence+
b$RealGDP+ b$Fed_Funds_Rate+ b$Nonfarm_Payrolls,
data=b)
# Eliminando variables
temporal<-ols_step_backward_aic(model_3)
# Eliminando variables
temporal<-ols_step_backward_aic(model_3)
model_3<-temporal$model
# Eliminando variables
temporal<-ols_step_both_p(model_3)
typeof(model_3)
typeof(model_2)
typeof(model_1)
model_3$model
model_3$coefficients
# Eliminando variables
temporal<-ols_step_both_p(model_3)
model_3
model_1
